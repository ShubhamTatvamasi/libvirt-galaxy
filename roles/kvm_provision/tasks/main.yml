---
- name: Ensure ubuntu requirements in place
  become: yes
  package:
    name:
      - libguestfs-tools
      - python3-libvirt

- name: Get VMs list
  community.libvirt.virt:
    command: list_vms
  register: existing_vms
  changed_when: no

- name: Create new uuid
  shell: uuidgen
  register: new_uuid

- set_fact:
    uuid: "{{ new_uuid.stdout }}"

- name: Create VM if not exists
  when: "vm_name not in existing_vms.list_vms"
  block:
  - name: Copy ubuntu base image to libvirt directory
    become: yes
    copy:
      src: "{{ libvirt_pool_dir }}/{{ ubuntu_image }}"
      dest: "{{ libvirt_pool_dir }}/{{ vm_name }}.qcow2"
      mode: 0660
      force: no
      remote_src: yes
    register: copy_results

  - name: Configure the image
    when: copy_results.changed
    become: yes
    command: |
      virt-customize -a {{ libvirt_pool_dir }}/{{ vm_name }}.qcow2 \
      --hostname {{ vm_name }} \
      --root-password password:{{ vm_root_pass }} \
      --ssh-inject 'root:file:{{ ansible_env.HOME }}/.ssh/id_rsa.pub' \
      --uninstall cloud-init --selinux-relabel

  - name: Define vm
    community.libvirt.virt:
      command: define
      xml: "{{ lookup('template', 'vm-ubuntu-template.xml.j2') }}"

- name: Ensure VM is started
  community.libvirt.virt:
    name: "{{ vm_name }}"
    state: running
  register: vm_start_results
  until: "vm_start_results is success"
  retries: 15
  delay: 2
